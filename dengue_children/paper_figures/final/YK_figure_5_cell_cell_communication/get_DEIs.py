import numpy as np
import pandas as pd

save_tables = '/home/yike/projects/dengue/data/'
fn_int = '/home/yike/projects/dengue/data/inters_YK_20220324.tsv'
pair_fn = '/home/yike/projects/dengue/data/ct_pair.tsv'
log2fc_fn = '/home/yike/projects/dengue/data/ct_log2FC.tsv'

cts = [
'B cells',
 'Plasmablasts',
 'T cells',
 'NK cells',
 'Monocytes',
 'conventional DCs',
 'plasmacytoid DCs'
]

interactions = pd.read_csv(fn_int, sep='\t', dtype={'is_stimulation': 'object',
                                             'is_inhibition': 'object',
                                             'consensus_direction': 'object',
                                             'consensus_stimulation': 'object',
                                             'consensus_inhibition': 'object',
                                             'database_intercell_source': 'object',
                                             'transmitter_intercell_source': 'object',
                                             'receiver_intercell_source': 'object',
                                             'secreted_intercell_source': 'object',
                                             'plasma_membrane_transmembrane_intercell_source': 'object',
                                             'plasma_membrane_peripheral_intercell_source': 'object',
                                             'database_intercell_target': 'object',
                                             'transmitter_intercell_target': 'object',
                                             'receiver_intercell_target': 'object',
                                             'secreted_intercell_target': 'object',
                                             'plasma_membrane_transmembrane_intercell_target': 'object',
                                             'plasma_membrane_peripheral_intercell_target': 'object'})
genes = np.unique(interactions[['genesymbol_intercell_target', 'genesymbol_intercell_source']])

not_ls = [
'ACE2',
 'ACP4',
 'ADAM2',
 'ADAM7',
 'ADAMTS3',
 'ADCY8',
 'ADCYAP1',
 'ADCYAP1R1',
 'ADGRL2',
 'ADGRL4',
 'ADIPOQ',
 'ADRA1A',
 'ADRA1D',
 'ADRA2C',
 'ADRB3',
 'AGT',
 'AGTR1',
 'AGTR2',
 'ALKAL1',
 'AMBN',
 'AMELX',
 'AMELY',
 'ANGPT4',
 'ANGPTL2',
 'ANGPTL3',
 'ANGPTL5',
 'ANGPTL7',
 'ANTXR1',
 'APELA',
 'APLN',
 'APLNR',
 'APOA2',
 'APOA4',
 'APOB',
 'APOC3',
 'APOC4',
 'AQP2',
 'AQP5',
 'ATP2B2',
 'AVPR1B',
 'AZGP1',
 'BDKRB1',
 'BDKRB2',
 'BGN',
 'BMP10',
 'BMP15',
 'BMP4',
 'BMP5',
 'BMP7',
 'BMPR1B',
 'BRS3',
 'BTC',
 'C1QTNF5',
 'C6orf15',
 'CACNA1B',
 'CACNA1G',
 'CALCA',
 'CALCR',
 'CALML3',
 'CAV3',
 'CCK',
 'CCKAR',
 'CCKBR',
 'CCL11',
 'CCL13',
 'CCL14',
 'CCL15',
 'CCL16',
 'CCL21',
 'CCL3L3',
 'CCL4L1',
 'CCN3',
 'CD177',
 'CD97',
 'CDH10',
 'CDH11',
 'CDH19',
 'CEACAM16',
 'CEACAM5',
 'CEACAM6',
 'CEACAM7',
 'CEACAM8',
 'CELA3B',
 'CER1',
 'CFC1',
 'CFC1B',
 'CFTR',
 'CGA',
 'CGB7',
 'CHAT',
 'CHI3L1',
 'CHRM1',
 'CHRM2',
 'CHRNA3',
 'CHRNA4',
 'CHRNA9',
 'CHRNB3',
 'CHRNB4',
 'CHRND',
 'CHRNG',
 'CLCA2',
 'CLDN1',
 'CLDN2',
 'CLEC14A',
 'CLEC2A',
 'CLEC2L',
 'CLEC4M',
 'CNTFR',
 'CNTN1',
 'CNTN3',
 'CNTN4',
 'CNTN6',
 'CNTNAP4',
 'COL11A1',
 'COL14A1',
 'COL2A1',
 'COL3A1',
 'COL4A1',
 'COL4A2',
 'COL4A5',
 'COL4A6',
 'COL6A5',
 'COL6A6',
 'COL9A1',
 'COMPLEX:ACVR1B_ACVR2A',
 'COMPLEX:ACVR1B_ACVR2A_CFC1',
 'COMPLEX:ACVR1B_ACVR2B',
 'COMPLEX:ACVR1B_ACVR2B_CFC1',
 'COMPLEX:ACVR1B_ACVR2B_TDGF1',
 'COMPLEX:ACVR1B_BMPR2',
 'COMPLEX:ACVR1B_TGFBR2',
 'COMPLEX:ACVR1C_ACVR2A',
 'COMPLEX:ACVR1C_ACVR2A_CFC1',
 'COMPLEX:ACVR1C_ACVR2B',
 'COMPLEX:ACVR1C_ACVR2B_CFC1',
 'COMPLEX:ACVR1C_TGFBR2',
 'COMPLEX:ACVR1_ACVR2A',
 'COMPLEX:ACVR1_ACVR2B',
 'COMPLEX:ACVR1_AMHR2',
 'COMPLEX:ACVR1_BMPR2',
 'COMPLEX:ACVR1_TGFBR1_TGFBR2',
 'COMPLEX:ACVR1_TGFBR2',
 'COMPLEX:ACVR2A_ACVRL1',
 'COMPLEX:ACVR2A_BMPR1A',
 'COMPLEX:ACVR2A_BMPR1B',
 'COMPLEX:ACVR2A_TGFBR1',
 'COMPLEX:ACVR2B_ACVRL1',
 'COMPLEX:ACVR2B_BMPR1A',
 'COMPLEX:ACVR2B_BMPR1B',
 'COMPLEX:ACVR2B_TGFBR1',
 'COMPLEX:ACVRL1_BMPR2',
 'COMPLEX:AMHR2_BMPR1A',
 'COMPLEX:AMHR2_BMPR1B',
 'COMPLEX:APP_BACE1',
 'COMPLEX:APP_BACE1_PSEN1',
 'COMPLEX:BMPR1A_BMPR2',
 'COMPLEX:BMPR1B_BMPR2',
 'COMPLEX:BMPR2_TGFBR1',
 'COMPLEX:CALCRL_RAMP1',
 'COMPLEX:CALCRL_RAMP2',
 'COMPLEX:CALCRL_RAMP3',
 'COMPLEX:CD44_CD74',
 'COMPLEX:CD74_CXCR2',
 'COMPLEX:CD74_CXCR4',
 'COMPLEX:CD8A_CD8B',
 'COMPLEX:CGA_FSHB',
 'COMPLEX:CGA_LHB',
 'COMPLEX:CLCF1_CRLF1',
 'COMPLEX:CNTFR_IL6ST',
 'COMPLEX:CNTFR_IL6ST_LIFR',
 'COMPLEX:CNTN1_CNTNAP1',
 'COMPLEX:CNTN2_CNTNAP2',
 'COMPLEX:CRLF2_IL7R',
 'COMPLEX:CSF1_IL34',
 'COMPLEX:CSF2RA_CSF2RB',
 'COMPLEX:CSF2RB_IL3RA',
 'COMPLEX:CSF2RB_IL5RA',
 'COMPLEX:EBI3_IL12A',
 'COMPLEX:EBI3_IL27',
 'COMPLEX:EGFR_ERBB2',
 'COMPLEX:ERBB2_ERBB3',
 'COMPLEX:ERBB2_ERBB4',
 'COMPLEX:FLT1_KDR',
 'COMPLEX:FLT4_KDR',
 'COMPLEX:FPR2_FPR3',
 'COMPLEX:FRAS1_FREM1_NPNT',
 'COMPLEX:FRAS1_FREM2_NPNT',
 'COMPLEX:FZD10_LRP5',
 'COMPLEX:FZD10_LRP6',
 'COMPLEX:FZD1_LRP5',
 'COMPLEX:FZD1_LRP6',
 'COMPLEX:FZD2_LRP5',
 'COMPLEX:FZD2_LRP6',
 'COMPLEX:FZD3_LRP5',
 'COMPLEX:FZD3_LRP6',
 'COMPLEX:FZD4_LRP5',
 'COMPLEX:FZD4_LRP6',
 'COMPLEX:FZD5_LRP5',
 'COMPLEX:FZD5_LRP6',
 'COMPLEX:FZD6_LRP5',
 'COMPLEX:FZD6_LRP6',
 'COMPLEX:FZD7_LRP5',
 'COMPLEX:FZD7_LRP6',
 'COMPLEX:FZD8_LRP5',
 'COMPLEX:FZD8_LRP6',
 'COMPLEX:FZD9_LRP5',
 'COMPLEX:FZD9_LRP6',
 'COMPLEX:GFRA1_RET',
 'COMPLEX:GFRA2_RET',
 'COMPLEX:GFRA3_RET',
 'COMPLEX:GFRA4_RET',
 'COMPLEX:GP1BA_GP1BB',
 'COMPLEX:GP1BA_GP1BB_GP5_GP9',
 'COMPLEX:HCST_KLRK1',
 'COMPLEX:IFNAR1_IFNAR2',
 'COMPLEX:IFNGR1_IFNGR2',
 'COMPLEX:IFNLR1_IL10RB',
 'COMPLEX:IGHG1_IGLC1',
 'COMPLEX:IL10RA_IL10RB',
 'COMPLEX:IL10RB_IL20RA',
 'COMPLEX:IL10RB_IL22RA1',
 'COMPLEX:IL11RA_IL6ST',
 'COMPLEX:IL12A_IL12B',
 'COMPLEX:IL12A_IL27',
 'COMPLEX:IL12B_IL23A',
 'COMPLEX:IL12RB1_IL12RB2',
 'COMPLEX:IL12RB1_IL23R',
 'COMPLEX:IL12RB2_IL27RA',
 'COMPLEX:IL12RB2_IL6ST',
 'COMPLEX:IL13RA1_IL4R',
 'COMPLEX:IL13RA2_IL4R',
 'COMPLEX:IL15RA_IL2RB_IL2RG',
 'COMPLEX:IL17A_IL17F',
 'COMPLEX:IL17RA_IL17RB',
 'COMPLEX:IL17RA_IL17RC',
 'COMPLEX:IL17RA_IL17RE',
 'COMPLEX:IL18R1_IL18RAP',
 'COMPLEX:IL18R1_SIGIRR',
 'COMPLEX:IL1R1_IL1RAP',
 'COMPLEX:IL1R2_IL1RAP',
 'COMPLEX:IL1RAP_IL1RL1',
 'COMPLEX:IL1RAP_IL1RL2',
 'COMPLEX:IL20RA_IL20RB',
 'COMPLEX:IL20RA_IL20RB_IL2RG',
 'COMPLEX:IL20RB_IL22RA1',
 'COMPLEX:IL21R_IL2RG',
 'COMPLEX:IL27RA_IL6ST',
 'COMPLEX:IL2RA_IL2RB_IL2RG',
 'COMPLEX:IL2RB_IL2RG',
 'COMPLEX:IL2RG_IL4R',
 'COMPLEX:IL2RG_IL7R',
 'COMPLEX:IL2RG_IL9R',
 'COMPLEX:IL31RA_OSMR',
 'COMPLEX:IL6R_IL6ST',
 'COMPLEX:IL6ST_LIFR',
 'COMPLEX:IL6ST_OSMR',
 'COMPLEX:IL6_IL6R_IL6ST',
 'COMPLEX:INHA_INHBA',
 'COMPLEX:INHA_INHBB',
 'COMPLEX:INHBA_INHBB',
 'COMPLEX:ITGA10_ITGB1',
 'COMPLEX:ITGA11_ITGB1',
 'COMPLEX:ITGA1_ITGB1',
 'COMPLEX:ITGA2B_ITGB3',
 'COMPLEX:ITGA2_ITGB1',
 'COMPLEX:ITGA3_ITGB1',
 'COMPLEX:ITGA4_ITGB1',
 'COMPLEX:ITGA4_ITGB7',
 'COMPLEX:ITGA5_ITGB1',
 'COMPLEX:ITGA6_ITGB1',
 'COMPLEX:ITGA6_ITGB4',
 'COMPLEX:ITGA7_ITGB1',
 'COMPLEX:ITGA8_ITGB1',
 'COMPLEX:ITGA9_ITGB1',
 'COMPLEX:ITGAE_ITGB7',
 'COMPLEX:ITGAL_ITGB2',
 'COMPLEX:ITGAM_ITGB2',
 'COMPLEX:ITGAV_ITGB1',
 'COMPLEX:ITGAV_ITGB3',
 'COMPLEX:ITGAV_ITGB5',
 'COMPLEX:ITGAV_ITGB6',
 'COMPLEX:ITGAV_ITGB8',
 'COMPLEX:ITGAX_ITGB2',
 'COMPLEX:KDR_PLXNA1',
 'COMPLEX:KLRC1_KLRD1',
 'COMPLEX:KLRC2_KLRD1',
 'COMPLEX:KLRC3_KLRD1',
 'COMPLEX:LGR4_LRP5',
 'COMPLEX:LGR4_LRP6',
 'COMPLEX:LGR5_LRP5',
 'COMPLEX:LGR5_LRP6',
 'COMPLEX:LTA_LTB',
 'COMPLEX:MC2R_MRAP',
 'COMPLEX:NRP1_NRP2_PLXND1',
 'COMPLEX:NRP1_PLXNA1',
 'COMPLEX:NRP1_PLXNA2',
 'COMPLEX:NRP1_PLXNA3',
 'COMPLEX:NRP1_PLXNA4',
 'COMPLEX:NRP2_PLXNA1',
 'COMPLEX:NRP2_PLXNA2',
 'COMPLEX:NRP2_PLXNA3',
 'COMPLEX:NRP2_PLXNA4',
 'COMPLEX:PDGFRA_PDGFRB',
 'COMPLEX:PLXNA1_TREM2_TYROBP',
 'COMPLEX:PTCH1_SMO',
 'COMPLEX:PTCH2_SMO',
 'COMPLEX:RIPK1_TRADD_TRAF2',
 'COMPLEX:TGFBR1_TGFBR2',
 'COMPLEX:TRAF2_TRAF3',
 'CRH',
 'CRHR1',
 'CRHR2',
 'CRISP2',
 'CRISP3',
 'CRP',
 'CSH1',
 'CSH2',
 'CSHL1',
 'CTNND2',
 'CX3CL1',
 'CXCL17',
 'CXCL6',
 'CYR61',
 'DAND5',
 'DCN',
 'DEFB103A',
 'DEFB106A',
 'DEFB4B',
 'DHH',
 'DKK4',
 'DLK1',
 'DMBT1',
 'DMP1',
 'DRD1',
 'DRD2',
 'DRD5',
 'DSCAM',
 'DSG1',
 'DSG4',
 'DSPP',
 'EDIL3',
 'EDN2',
 'EDNRA',
 'EFNA2',
 'EFNB3',
 'EFS',
 'EGFR',
 'ENPEP',
 'EPHA3',
 'EPHA5',
 'EPHA6',
 'EPO',
 'F10',
 'F9',
 'FGA',
 'FGB',
 'FGF1',
 'FGF10',
 'FGF19',
 'FGF21',
 'FGF23',
 'FGF3',
 'FGF4',
 'FGF5',
 'FGF6',
 'FGFR3',
 'FGG',
 'FGL1',
 'FMOD',
 'FSHB',
 'FSHR',
 'FZD10',
 'GABRQ',
 'GALP',
 'GALR1',
 'GAST',
 'GC',
 'GCG',
 'GCGR',
 'GDF1',
 'GDF2',
 'GDF3',
 'GDF6',
 'GDNF',
 'GFRA1',
 'GFRA4',
 'GFRAL',
 'GH2',
 'GHR',
 'GHRHR',
 'GIP',
 'GJA1',
 'GLP2R',
 'GLRA2',
 'GLYCAM1',
 'GNRH2',
 'GNRHR',
 'GNRHR2',
 'GP1BB',
 'GPHA2',
 'GPHB5',
 'GPIHBP1',
 'GPR101',
 'GPR151',
 'GPR182',
 'GPRC5A',
 'GRIA1',
 'GRIA4',
 'GRID2',
 'GRIN2A',
 'GRIN2B',
 'GRM1',
 'GRM5',
 'GRM7',
 'GRP',
 'GUCA2A',
 'GUCA2B',
 'GUCY2F',
 'HCRTR1',
 'HCRTR2',
 'HJV',
 'HLA-DPA2',
 'HLA-DPB2',
 'HLA-DRB2',
 'HLA-DRB3',
 'HLA-DRB4',
 'HLA-DRB6',
 'HLA-DRB7',
 'HLA-DRB8',
 'HLA-DRB9',
 'HRG',
 'HTR2A',
 'HTR2C',
 'IAPP',
 'IBSP',
 'IFNA1',
 'IFNA10',
 'IFNA14',
 'IFNA16',
 'IFNA17',
 'IFNA21',
 'IFNA4',
 'IFNA5',
 'IFNA6',
 'IFNA7',
 'IFNA8',
 'IFNK',
 'IFNL2',
 'IFNL3',
 'IFNL4',
 'IFNW1',
 'IGF2',
 'IGFL1',
 'IGFL3',
 'IGSF5',
 'IHH',
 'IL11',
 'IL13RA2',
 'IL17A',
 'IL17B',
 'IL17F',
 'IL1F10',
 'IL1RAPL1',
 'IL1RAPL2',
 'IL20',
 'IL20RA',
 'IL22',
 'IL22RA2',
 'IL25',
 'IL31',
 'IL33',
 'IL34',
 'IL36B',
 'IL36G',
 'IL36RN',
 'IL37',
 'IL9',
 'INHA',
 'INHBC',
 'INS',
 'INSL5',
 'ITGB6',
 'ITIH2',
 'IZUMO1',
 'IZUMO1R',
 'KCNA4',
 'KCND2',
 'KCNJ3',
 'KCNJ4',
 'KCNK18',
 'KCNK3',
 'KDR',
 'KIR2DL2',
 'KIR2DL5A',
 'KIR2DS1',
 'KIR2DS2',
 'KIR2DS3',
 'KIR2DS4',
 'KIR2DS5',
 'KIR3DS1',
 'KISS1',
 'KLK6',
 'KNG1',
 'KRT14',
 'LACRT',
 'LAMA1',
 'LAMA4',
 'LAMB4',
 'LAMC2',
 'LGI1',
 'LGI2',
 'LGI3',
 'LGR5',
 'LHCGR',
 'LIFR',
 'LILRA3',
 'LINGO1',
 'LRP2',
 'LRRC4B',
 'LUM',
 'LYVE1',
 'MBL2',
 'MC2R',
 'MC3R',
 'MC4R',
 'MC5R',
 'MCHR1',
 'MCHR2',
 'MFRP',
 'MLN',
 'MLNR',
 'MMP12',
 'MMP13',
 'MMP2',
 'MMP3',
 'MPDZ',
 'MRGPRX1',
 'MRGPRX3',
 'MRGPRX4',
 'MT-RNR2',
 'MTNR1A',
 'MTNR1B',
 'MUC13',
 'MUC5AC',
 'MUC7',
 'MUSK',
 'MYOC',
 'NCAN',
 'NDP',
 'NGF',
 'NLGN1',
 'NMBR',
 'NMS',
 'NMUR2',
 'NOX1',
 'NPFF',
 'NPFFR2',
 'NPPB',
 'NPR1',
 'NPS',
 'NPSR1',
 'NPVF',
 'NPY1R',
 'NPY2R',
 'NPY4R',
 'NPY5R',
 'NPY6R',
 'NR0B2',
 'NR1H4',
 'NRG3',
 'NTF3',
 'NTF4',
 'NTN3',
 'NTRK3',
 'NTS',
 'NTSR2',
 'NXPH1',
 'NXPH2',
 'NYX',
 'OBP2A',
 'OLFM4',
 'OPN4',
 'OPRK1',
 'OR1E1',
 'OR1G1',
 'ORM1',
 'OSTN',
 'PCSK9',
 'PDPN',
 'PDYN',
 'PGLYRP1',
 'PGR',
 'PI3',
 'PLA2G2A',
 'POSTN',
 'PRLH',
 'PRLHR',
 'PROK1',
 'PROKR1',
 'PROKR2',
 'PTH',
 'PTH1R',
 'PTN',
 'PTPRT',
 'PTPRZ1',
 'PYY2',
 'QRFPR',
 'RAET1E',
 'RAET1G',
 'RAET1L',
 'RBP3',
 'RELN',
 'RIMS1',
 'ROBO2',
 'ROS1',
 'RSPO1',
 'RSPO2',
 'RSPO3',
 'RSPO4',
 'RXFP1',
 'RXFP2',
 'RXFP3',
 'RXFP4',
 'SCGB1A1',
 'SCN10A',
 'SCN1A',
 'SCTR',
 'SELE',
 'SEMA3E',
 'SEMA6D',
 'SERPINA3',
 'SERPINA5',
 'SFRP2',
 'SFTPA2',
 'SHANK1',
 'SIGLEC8',
 'SLC10A2',
 'SLC12A1',
 'SLC18A3',
 'SLC26A3',
 'SLC2A4',
 'SLC39A2',
 'SLC6A19',
 'SLIT2',
 'SLITRK1',
 'SLITRK2',
 'SLITRK3',
 'SLITRK6',
 'SLURP1',
 'SLURP2',
 'SORCS1',
 'SOST',
 'SOSTDC1',
 'SPP1',
 'SST',
 'SSTR1',
 'SSTR4',
 'SSTR5',
 'STAB2',
 'STC1',
 'TAC1',
 'TAC4',
 'TACR3',
 'TAS2R38',
 'TDGF1',
 'TECTB',
 'TEK',
 'TFF1',
 'TFF2',
 'TH',
 'THBS2',
 'THPO',
 'TMPRSS11D',
 'TNFRSF11B',
 'TNFRSF6B',
 'TRHR',
 'TRPC4',
 'TRPV5',
 'TRPV6',
 'TSHB',
 'TTR',
 'TYR',
 'UCN2',
 'UCN3',
 'UNC5A',
 'UNC5D',
 'USH2A',
 'VEGFD',
 'VIP',
 'VTCN1',
 'WIF1',
 'WISP1',
 'WNT2',
 'WNT5A',
 'WNT8A',
 'WNT8B',
 'WNT9A',
 'WNT9B']

genes = [gene for gene in genes if gene not in not_ls] 

interactions = interactions[interactions['genesymbol_intercell_target'].isin(genes) & interactions['genesymbol_intercell_source'].isin(genes)]

def get_DEIs(data_ct, cts, up_DEGs, down_DEGs):
    
    data_ct = data_ct.sort_index()

    res = []

    for i, cst in enumerate(cts):
        for j, ct in enumerate(cts):
            print(f'process: {(i * len(cts)  + (j + 1)) / (len(cts) * len(cts))}')
            for _, row in interactions.iterrows():
                ga = row['genesymbol_intercell_source']
                gb = row['genesymbol_intercell_target']

                if (ga in up_DEGs[cst]) & (gb in up_DEGs[ct]):
                    res.append([
                            ga, cst, 
                            gb, ct,  'up' 
                        ])

                if (ga in down_DEGs[cst]) & (gb in down_DEGs[ct]):
                    res.append([
                            ga, cst, 
                            gb, ct, 'down' 
                        ])

                if (ga in up_DEGs[cst]) & (gb in down_DEGs[ct]):
                    res.append([
                            ga, cst, 
                            gb, ct, 'mix' 
                        ])

                if (ga in down_DEGs[cst]) & (gb in up_DEGs[ct]):
                    res.append([
                            gb, ct, 
                            ga, cst,'mix' 
                        ])

    res = pd.DataFrame(res, columns=[
        'ga', 'csta', 
        'gb', 'cstb', 'inter_type' 
        ])
                
    return res


cst_pair = pd.read_csv(pair_fn, sep='\t', index_col=['cell_subtype', 'gene'])
# cst_log2FC = pd.read_csv(log2fc_fn, sep='\t', index_col=0)

cst_up_DEGs = {}
cst_down_DEGs = {}

for cst in cts:
    data_cst = cst_pair.loc[cst].loc[genes] ## interacting genes
    up_cst = data_cst[((data_cst['med_pair'] >= 1) & (data_cst['fra_pair'] >= 39/56) & (data_cst['S_fra'] >= 0.02))]
    cst_up_DEGs[cst] = up_cst.index
    down_cst = data_cst[((data_cst['med_pair'] <= -1) & (data_cst['neg_fra_pair'] >= 39/56) & (data_cst['NS_fra'] >= 0.02))]
    cst_down_DEGs[cst] = down_cst.index
    
cst_res_inters = get_DEIs(cst_pair, cts, cst_up_DEGs, cst_down_DEGs)   
cst_res_inters = cst_res_inters[~ cst_res_inters[['ga', 'csta', 'gb', 'cstb']].duplicated()]
cst_res_inters.to_csv(save_tables + 'inters_med_pair1_pair39_56_exp002.tsv', sep='\t', index=False)
